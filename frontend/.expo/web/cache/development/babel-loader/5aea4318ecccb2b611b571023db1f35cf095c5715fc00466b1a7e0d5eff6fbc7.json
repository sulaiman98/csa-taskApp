{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignInScreen = function SignInScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setpassword = _useState4[1];\n  var handleSignIn = function handleSignIn() {\n    navigation.navigate('MainTabs');\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    children: _jsxs(SafeAreaView, {\n      SafeAreaView: true,\n      showsVerticalScrollIndicator: false,\n      style: _objectSpread(_objectSpread({}, styles.container), {}, {\n        paddingTop: 130,\n        paddingHorizontal: 35\n      }),\n      children: [_jsx(Text, {\n        style: styles.signInText,\n        children: \"Sign In\"\n      }), _jsxs(View, {\n        style: styles.form,\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Username\",\n          value: username,\n          onChangeText: function onChangeText(text) {\n            return setUsername(text);\n          }\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setpassword(text);\n          }\n        }), _jsx(TouchableOpacity, {\n          style: styles.addButton,\n          onPress: handleSignIn,\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Sign In\"\n          })\n        })]\n      }), _jsxs(View, {\n        style: styles.option,\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('SignUp');\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: \"Create Account\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('UpdatePasword');\n          },\n          children: _jsx(Text, {\n            style: styles.optionText,\n            children: \"Forget Password?\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#094FAF'\n  },\n  signInText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 20,\n    alignSelf: \"center\"\n  },\n  form: {\n    justifyContent: \"space-between\",\n    alignContent: \"center\"\n  },\n  input: {\n    height: 40,\n    width: '100%',\n    borderColor: 'white',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginTop: 15,\n    paddingHorizontal: 10,\n    color: '#eee'\n  },\n  option: {\n    flexDirection: 'row',\n    justifyContent: \"space-between\"\n  },\n  optionText: {\n    color: '#fff'\n  },\n  addButton: {\n    backgroundColor: '#fff',\n    padding: 13,\n    marginTop: 30,\n    width: '100%',\n    alignSelf: 'center',\n    marginBottom: 20,\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15\n  },\n  buttonText: {\n    color: '#094FAF',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  button: {\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: '#3498db',\n    padding: 10\n  }\n});\nexport default SignInScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","TouchableOpacity","ScrollView","TouchableWithoutFeedback","Keyboard","KeyboardAvoidingView","SafeAreaView","jsx","_jsx","jsxs","_jsxs","SignInScreen","_ref","navigation","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setpassword","handleSignIn","navigate","onPress","dismiss","children","showsVerticalScrollIndicator","style","_objectSpread","styles","container","paddingTop","paddingHorizontal","signInText","form","input","placeholder","value","onChangeText","text","addButton","buttonText","option","optionText","create","flex","justifyContent","backgroundColor","fontSize","fontWeight","color","marginBottom","alignSelf","alignContent","height","width","borderColor","borderWidth","borderRadius","marginTop","flexDirection","padding","borderTopLeftRadius","borderTopRightRadius","textAlign","button"],"sources":["C:/Users/barry/Desktop/Logic/CS Academiy/csa-TaskApp/screens/SignInScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet, TouchableOpacity, ScrollView, TouchableWithoutFeedback, Keyboard, KeyboardAvoidingView } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\n\n\nconst SignInScreen = function ({ navigation }) {\n    const [username, setUsername] = useState('');\n    const [password, setpassword] = useState('');\n\n    const handleSignIn = () => {\n        // Perform sign-in logic here\n\n\n        // Navigate to the main tab navigator\n        navigation.navigate('MainTabs');\n    };\n\n    return (\n        // <KeyboardAvoidingView behavior='padding'\n        //     keyboardVerticalOffset={Platform.OS === 'ios' ? 50 : 70}\n        //     style={styles.container}\n        // >\n        <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n            <SafeAreaView\n                SafeAreaView showsVerticalScrollIndicator={false}\n                style={{ ...styles.container, paddingTop: 130, paddingHorizontal: 35, }}\n            >\n                <Text style={styles.signInText}>Sign In</Text>\n\n                <View style={styles.form}>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Username\"\n                        value={username}\n                        onChangeText={(text) => setUsername(text)}\n                    />\n\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Password\"\n                        value={password}\n                        onChangeText={(text) => setpassword(text)}\n                    />\n\n                    <TouchableOpacity style={styles.addButton}\n                        onPress={handleSignIn}\n                    >\n                        <Text style={styles.buttonText}>Sign In</Text>\n                    </TouchableOpacity>\n                </View>\n\n                <View style={styles.option}>\n                    <TouchableOpacity\n                        onPress={() => navigation.navigate('SignUp')}\n                    >\n                        <Text style={styles.optionText}>Create Account</Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity\n                        onPress={() => navigation.navigate('UpdatePasword')}\n                    >\n                        <Text style={styles.optionText}>Forget Password?</Text>\n                    </TouchableOpacity>\n                </View>\n            </SafeAreaView>\n        </TouchableWithoutFeedback>\n        // </KeyboardAvoidingView>\n\n    )\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: '#094FAF', // Background color\n        // padding: 10,  // All sides are 10\n        // paddingHorizontal: 50,  // Left and right are 20\n    },\n    signInText: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        color: 'white', // Text color\n        marginBottom: 20,\n        alignSelf: \"center\"\n\n    },\n    form: {\n        justifyContent: \"space-between\",\n        alignContent: \"center\"\n    },\n    input: {\n        height: 40,\n        width: '100%',\n        borderColor: 'white', // Input border color\n        borderWidth: 1,\n        borderRadius: 5,\n        marginTop: 15,\n        paddingHorizontal: 10,\n        color: '#eee'\n    },\n\n    option: {\n        flexDirection: 'row',\n        justifyContent: \"space-between\"\n    },\n\n    optionText: {\n        color: '#fff',\n    },\n\n    addButton: {\n        backgroundColor: '#fff',\n        padding: 13,  // All sides are 10\n        marginTop: 30,\n        width: '100%',\n        alignSelf: 'center',\n        marginBottom: 20,\n        borderTopLeftRadius: 15,\n        borderTopRightRadius: 15\n    },\n    buttonText: {\n        color: '#094FAF',\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n\n    button: {\n        borderRadius: 10, // Set the border radius\n        borderWidth: 2, // Set the border width\n        borderColor: '#3498db', // Set the border color to blue\n        padding: 10, // Add some padding for better visual appearance\n    },\n});\n\nexport default SignInScreen;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}