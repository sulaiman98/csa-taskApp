{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Header, Days } from '.';\nimport { useCalendar } from \"../DatePicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Calendar = function Calendar() {\n  var _useCalendar = useCalendar(),\n    options = _useCalendar.options,\n    state = _useCalendar.state,\n    utils = _useCalendar.utils,\n    onSelectedChange = _useCalendar.onSelectedChange;\n  var _state = _slicedToArray(state, 1),\n    mainState = _state[0];\n  var style = styles(options);\n  var _utils$useMonthAnimat = utils.useMonthAnimation(mainState.activeDate, options.daysAnimationDistance),\n    _utils$useMonthAnimat2 = _slicedToArray(_utils$useMonthAnimat, 2),\n    shownAnimation = _utils$useMonthAnimat2[0].shownAnimation,\n    changeMonthAnimation = _utils$useMonthAnimat2[1];\n  useEffect(function () {\n    mainState.selectedDate && onSelectedChange(mainState.selectedDate);\n  }, [mainState.selectedDate, onSelectedChange]);\n  return _jsxs(View, {\n    style: style.container,\n    children: [_jsx(Header, {\n      changeMonth: changeMonthAnimation\n    }), _jsx(View, {\n      style: [style.daysName, utils.flexDirection],\n      children: utils.config.dayNamesShort.map(function (item) {\n        return _jsx(Text, {\n          style: style.daysNameText,\n          children: item\n        }, item);\n      })\n    }), _jsx(View, {\n      style: style.daysContainer,\n      children: _jsx(Animated.View, {\n        style: [style.days, shownAnimation],\n        children: _jsx(Days, {})\n      })\n    })]\n  });\n};\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    container: {\n      flexDirection: 'column',\n      flex: 1\n    },\n    daysName: {\n      paddingBottom: 10,\n      marginBottom: 0,\n      alignItems: 'center',\n      justifyContent: 'space-around',\n      borderBottomColor: theme.borderColor,\n      borderBottomWidth: 1,\n      marginHorizontal: 15\n    },\n    daysNameText: {\n      fontFamily: theme.defaultFont,\n      color: theme.textSecondaryColor,\n      fontSize: theme.textFontSize\n    },\n    daysContainer: {\n      flex: 1,\n      position: 'relative',\n      overflow: 'hidden',\n      margin: 15,\n      marginTop: 5,\n      marginBottom: 0\n    },\n    days: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      top: 0,\n      right: 0\n    }\n  });\n};\nexport { Calendar };","map":{"version":3,"names":["React","useEffect","View","StyleSheet","Text","Animated","Header","Days","useCalendar","jsx","_jsx","jsxs","_jsxs","Calendar","_useCalendar","options","state","utils","onSelectedChange","_state","_slicedToArray","mainState","style","styles","_utils$useMonthAnimat","useMonthAnimation","activeDate","daysAnimationDistance","_utils$useMonthAnimat2","shownAnimation","changeMonthAnimation","selectedDate","container","children","changeMonth","daysName","flexDirection","config","dayNamesShort","map","item","daysNameText","daysContainer","days","theme","create","flex","paddingBottom","marginBottom","alignItems","justifyContent","borderBottomColor","borderColor","borderBottomWidth","marginHorizontal","fontFamily","defaultFont","color","textSecondaryColor","fontSize","textFontSize","position","overflow","margin","marginTop","width","height","top","right"],"sources":["/Users/sulaimanbarry/Downloads/csa-TaskApp/node_modules/react-native-modern-datepicker/src/datePicker/components/Calendar.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {View, StyleSheet, Text, Animated} from 'react-native';\n\nimport {Header, Days} from '.';\nimport {useCalendar} from '../DatePicker';\n\nconst Calendar = () => {\n  const {options, state, utils, onSelectedChange} = useCalendar();\n  const [mainState] = state;\n  const style = styles(options);\n  const [{shownAnimation}, changeMonthAnimation] = utils.useMonthAnimation(\n    mainState.activeDate,\n    options.daysAnimationDistance,\n  );\n\n  useEffect(() => {\n    mainState.selectedDate && onSelectedChange(mainState.selectedDate);\n  }, [mainState.selectedDate, onSelectedChange]);\n\n  return (\n    <View style={style.container}>\n      <Header changeMonth={changeMonthAnimation} />\n      <View style={[style.daysName, utils.flexDirection]}>\n        {utils.config.dayNamesShort.map(item => (\n          <Text key={item} style={style.daysNameText}>\n            {item}\n          </Text>\n        ))}\n      </View>\n      <View style={style.daysContainer}>\n        <Animated.View style={[style.days, shownAnimation]}>\n          <Days />\n        </Animated.View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = theme =>\n  StyleSheet.create({\n    container: {\n      flexDirection: 'column',\n      flex: 1,\n    },\n    daysName: {\n      paddingBottom: 10,\n      marginBottom: 0,\n      alignItems: 'center',\n      justifyContent: 'space-around',\n      borderBottomColor: theme.borderColor,\n      borderBottomWidth: 1,\n      marginHorizontal: 15,\n    },\n    daysNameText: {\n      fontFamily: theme.defaultFont,\n      color: theme.textSecondaryColor,\n      fontSize: theme.textFontSize,\n    },\n    daysContainer: {\n      flex: 1,\n      position: 'relative',\n      overflow: 'hidden',\n      margin: 15,\n      marginTop: 5,\n      marginBottom: 0,\n    },\n    days: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      top: 0,\n      right: 0,\n    },\n  });\n\nexport {Calendar};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}