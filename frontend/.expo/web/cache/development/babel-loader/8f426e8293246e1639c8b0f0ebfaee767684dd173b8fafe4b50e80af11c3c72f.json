{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useCalendar } from \"../DatePicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Days = function Days() {\n  var _useCalendar = useCalendar(),\n    options = _useCalendar.options,\n    state = _useCalendar.state,\n    utils = _useCalendar.utils,\n    onDateChange = _useCalendar.onDateChange;\n  var _state = _slicedToArray(state, 2),\n    mainState = _state[0],\n    setMainState = _state[1];\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    itemSize = _useState2[0],\n    setItemSize = _useState2[1];\n  var style = styles(options);\n  var days = useMemo(function () {\n    return utils.getMonthDays(mainState.activeDate);\n  });\n  var onSelectDay = function onSelectDay(date) {\n    setMainState({\n      type: 'set',\n      selectedDate: date\n    });\n    onDateChange(utils.getFormated(utils.getDate(date), 'dateFormat'));\n  };\n  var changeItemHeight = function changeItemHeight(_ref) {\n    var nativeEvent = _ref.nativeEvent;\n    var width = nativeEvent.layout.width;\n    !itemSize && setItemSize((width / 7).toFixed(2) * 1 - 0.5);\n  };\n  return _jsx(View, {\n    style: [style.container, utils.flexDirection],\n    onLayout: changeItemHeight,\n    children: days.map(function (day, n) {\n      return _jsx(View, {\n        style: {\n          width: itemSize,\n          height: itemSize\n        },\n        children: day && _jsx(TouchableOpacity, {\n          style: [style.dayItem, {\n            borderRadius: itemSize / 2\n          }, mainState.selectedDate === day.date && style.dayItemSelected],\n          onPress: function onPress() {\n            return !day.disabled && onSelectDay(day.date);\n          },\n          activeOpacity: 0.8,\n          children: _jsx(Text, {\n            style: [style.dayText, mainState.selectedDate === day.date && style.dayTextSelected, day.disabled && style.dayTextDisabled],\n            children: day.dayString\n          })\n        })\n      }, n);\n    })\n  });\n};\nvar styles = function styles(theme) {\n  return StyleSheet.create({\n    container: {\n      width: '100%',\n      height: '100%',\n      flexWrap: 'wrap'\n    },\n    dayItem: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: 3\n    },\n    dayItemSelected: {\n      backgroundColor: theme.mainColor\n    },\n    dayText: {\n      fontFamily: theme.defaultFont,\n      fontSize: theme.textFontSize,\n      color: theme.textDefaultColor,\n      textAlign: 'center',\n      width: '100%'\n    },\n    dayTextSelected: {\n      color: theme.selectedTextColor,\n      fontFamily: theme.headerFont\n    },\n    dayTextDisabled: {\n      opacity: 0.2\n    }\n  });\n};\nexport { Days };","map":{"version":3,"names":["React","useState","useMemo","View","Text","StyleSheet","TouchableOpacity","useCalendar","jsx","_jsx","Days","_useCalendar","options","state","utils","onDateChange","_state","_slicedToArray","mainState","setMainState","_useState","_useState2","itemSize","setItemSize","style","styles","days","getMonthDays","activeDate","onSelectDay","date","type","selectedDate","getFormated","getDate","changeItemHeight","_ref","nativeEvent","width","layout","toFixed","container","flexDirection","onLayout","children","map","day","n","height","dayItem","borderRadius","dayItemSelected","onPress","disabled","activeOpacity","dayText","dayTextSelected","dayTextDisabled","dayString","theme","create","flexWrap","flex","justifyContent","alignItems","margin","backgroundColor","mainColor","fontFamily","defaultFont","fontSize","textFontSize","color","textDefaultColor","textAlign","selectedTextColor","headerFont","opacity"],"sources":["C:/Users/barry/Desktop/logic/CS Academiy/csa-TaskApp/node_modules/react-native-modern-datepicker/src/datePicker/components/Days.js"],"sourcesContent":["import React, {useState, useMemo} from 'react';\nimport {View, Text, StyleSheet, TouchableOpacity} from 'react-native';\n\nimport {useCalendar} from '../DatePicker';\n\nconst Days = () => {\n  const {options, state, utils, onDateChange} = useCalendar();\n  const [mainState, setMainState] = state;\n  const [itemSize, setItemSize] = useState(0);\n  const style = styles(options);\n  const days = useMemo(() => utils.getMonthDays(mainState.activeDate));\n\n  const onSelectDay = date => {\n    setMainState({\n      type: 'set',\n      selectedDate: date,\n    });\n    onDateChange(utils.getFormated(utils.getDate(date), 'dateFormat'));\n  };\n\n  const changeItemHeight = ({nativeEvent}) => {\n    const {width} = nativeEvent.layout;\n    !itemSize && setItemSize((width / 7).toFixed(2) * 1 - 0.5);\n  };\n\n  return (\n    <View style={[style.container, utils.flexDirection]} onLayout={changeItemHeight}>\n      {days.map((day, n) => (\n        <View\n          key={n}\n          style={{\n            width: itemSize,\n            height: itemSize,\n          }}>\n          {day && (\n            <TouchableOpacity\n              style={[\n                style.dayItem,\n                {\n                  borderRadius: itemSize / 2,\n                },\n                mainState.selectedDate === day.date && style.dayItemSelected,\n              ]}\n              onPress={() => !day.disabled && onSelectDay(day.date)}\n              activeOpacity={0.8}>\n              <Text\n                style={[\n                  style.dayText,\n                  mainState.selectedDate === day.date && style.dayTextSelected,\n                  day.disabled && style.dayTextDisabled,\n                ]}>\n                {day.dayString}\n              </Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      ))}\n    </View>\n  );\n};\n\nconst styles = theme =>\n  StyleSheet.create({\n    container: {\n      width: '100%',\n      height: '100%',\n      flexWrap: 'wrap',\n    },\n    dayItem: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: 3,\n    },\n    dayItemSelected: {\n      backgroundColor: theme.mainColor,\n    },\n    dayText: {\n      fontFamily: theme.defaultFont,\n      fontSize: theme.textFontSize,\n      color: theme.textDefaultColor,\n      textAlign: 'center',\n      width: '100%',\n    },\n    dayTextSelected: {\n      color: theme.selectedTextColor,\n      fontFamily: theme.headerFont,\n    },\n    dayTextDisabled: {\n      opacity: 0.2,\n    },\n  });\n\nexport {Days};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}