{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.headerText,\n          children: \"Hello Barry\"\n        }), _jsx(Text, {\n          style: styles.subHeaderText,\n          children: \"Have a nice day!\"\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.addButton,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Add Task\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.taskItem,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"UI Development\"\n      }), _jsx(Text, {\n        style: styles.status,\n        children: \" Completed\"\n      }), _jsx(Text, {\n        style: styles.description,\n        children: \"I will be creating UI for my CS Acadmy Project\"\n      }), _jsx(Text, {\n        style: styles.date,\n        children: \" 1 Nov 2023 - 7 Nov 2023\"\n      })]\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    marginTop: 30\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerText: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  addButton: {\n    backgroundColor: '#094faf',\n    padding: 10,\n    borderRadius: 15,\n    paddingHorizontal: 20\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 400\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","App","style","styles","container","children","header","headerText","subHeaderText","addButton","buttonText","taskItem","title","status","description","date","create","flex","padding","marginTop","flexDirection","justifyContent","fontSize","fontWeight","backgroundColor","borderRadius","paddingHorizontal","color"],"sources":["/Users/danielabaka/Documents/csa-mobile/csa-TaskApp/App.js"],"sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity  } from \"react-native\";\n\nexport default function App (){\n  return(\n        <View style={styles.container}>\n          <View style={styles.header}>\n            <View>\n              <Text style={styles.headerText}>Hello Barry</Text>\n              <Text style={styles.subHeaderText}>Have a nice day!</Text>\n            </View>\n\n            <TouchableOpacity style={styles.addButton}>\n              <Text style={styles.buttonText}>Add Task</Text>\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles.taskItem}>\n            <Text style={styles.title}>UI Development</Text>\n            <Text style={styles.status}> Completed</Text>\n\n            <Text style={styles.description}>I will be creating UI for my CS Acadmy Project</Text>\n            <Text style={styles.date}> 1 Nov 2023 - 7 Nov 2023</Text>\n\n          </View>\n\n\n        </View>\n  );\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    marginTop: 30\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerText: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  addButton: {\n    backgroundColor: '#094faf',\n    padding: 10,\n    borderRadius: 15,\n    paddingHorizontal: 20\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 400,\n  }\n})\n\n// npx expo start --web\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,OACMD,KAAA,CAACP,IAAI;IAACS,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BL,KAAA,CAACP,IAAI;MAACS,KAAK,EAAEC,MAAM,CAACG,MAAO;MAAAD,QAAA,GACzBL,KAAA,CAACP,IAAI;QAAAY,QAAA,GACHP,IAAA,CAACJ,IAAI;UAACQ,KAAK,EAAEC,MAAM,CAACI,UAAW;UAAAF,QAAA,EAAC;QAAW,CAAM,CAAC,EAClDP,IAAA,CAACJ,IAAI;UAACQ,KAAK,EAAEC,MAAM,CAACK,aAAc;UAAAH,QAAA,EAAC;QAAgB,CAAM,CAAC;MAAA,CACtD,CAAC,EAEPP,IAAA,CAACF,gBAAgB;QAACM,KAAK,EAAEC,MAAM,CAACM,SAAU;QAAAJ,QAAA,EACxCP,IAAA,CAACJ,IAAI;UAACQ,KAAK,EAAEC,MAAM,CAACO,UAAW;UAAAL,QAAA,EAAC;QAAQ,CAAM;MAAC,CAC/B,CAAC;IAAA,CACf,CAAC,EAEPL,KAAA,CAACP,IAAI;MAACS,KAAK,EAAEC,MAAM,CAACQ,QAAS;MAAAN,QAAA,GAC3BP,IAAA,CAACJ,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACS,KAAM;QAAAP,QAAA,EAAC;MAAc,CAAM,CAAC,EAChDP,IAAA,CAACJ,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACU,MAAO;QAAAR,QAAA,EAAC;MAAU,CAAM,CAAC,EAE7CP,IAAA,CAACJ,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACW,WAAY;QAAAT,QAAA,EAAC;MAA8C,CAAM,CAAC,EACtFP,IAAA,CAACJ,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACY,IAAK;QAAAV,QAAA,EAAC;MAAwB,CAAM,CAAC;IAAA,CAErD,CAAC;EAAA,CAGH,CAAC;AAEf;AAAC;AAGD,IAAMF,MAAM,GAAGR,UAAU,CAACqB,MAAM,CAAC;EAC/BZ,SAAS,EAAE;IACTa,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE;EACb,CAAC;EACDb,MAAM,EAAE;IACNc,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDd,UAAU,EAAE;IACVe,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDd,SAAS,EAAE;IACTe,eAAe,EAAE,SAAS;IAC1BN,OAAO,EAAE,EAAE;IACXO,YAAY,EAAE,EAAE;IAChBC,iBAAiB,EAAE;EACrB,CAAC;EACDhB,UAAU,EAAE;IACViB,KAAK,EAAE,OAAO;IACdJ,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}